name: Android Build

on:
  push:
    branches: [ axis ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ axis ]

permissions:
  contents: write
  
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        abi: [arm64-v8a, armeabi-v7a, x86_64, x86]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c
          local-cache: true

      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build

      - name: Install xmake
        run: |
          wget https://xmake.io/shget.text -O - | bash
          source ~/.xmake/profile

      - name: Set SDK and NDK path
        run: |
          echo "SDK_PATH=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "NDK_PATH=$ANDROID_NDK_ROOT" >> $GITHUB_ENV

      - name: Build SDL2
        run: |
          cd vendor/SDL/build-scripts
          chmod +x android-prefab.sh
          ./android-prefab.sh
          mkdir -p ../../../android/app/libs
          SDL_AAR=$(find ../build-android-prefab/prefab-* -name "SDL2-*.aar")
          cp "$SDL_AAR" ../../../android/app/libs/

      - name: Build SDL Dependencies
        run: |
          xmake build_sdl_android --ARCH=${{ matrix.abi }}

      - name: Build Android Project
        run: |
          xmake f -p android --arch=${{ matrix.abi }} --ndk=$ANDROID_NDK_ROOT
          xmake

      - name: Build APK
        run: |
          cd android && ./gradlew assembleDebug

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: android-debug-apk-${{ matrix.abi }}
          path: android/app/build/outputs/apk/debug/app-${{ matrix.abi }}-debug.apk

      - name: Generate date
        id: date
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Create Nightly Release
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly-${{ steps.date.outputs.date }}
          name: Development Build ${{ steps.date.outputs.date }}
          draft: false
          prerelease: true
          files: android/app/build/outputs/apk/debug/app-${{ matrix.abi }}-debug.apk

      - name: Create Tagged Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: android/app/build/outputs/apk/debug/app-${{ matrix.abi }}-debug.apk