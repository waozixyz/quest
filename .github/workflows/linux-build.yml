name: Linux Build

on:
  push:
    branches: [ axis ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ axis ]

permissions:
  contents: write
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
            build-essential \
            clang \
            lld \
            cmake \
            ninja-build \
            pkg-config \
            wget \
            git \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-ttf-dev \
            libsdl2-gfx-dev

      - name: Install xmake
        run: |
          wget https://xmake.io/shget.text -O - | bash
          source ~/.xmake/profile

      - name: Build
        run: |
          xmake f -p linux -y
          xmake -y
          mkdir -p artifacts
          cp build/clay/main artifacts/myquest-linux-x86_64
          chmod +x artifacts/myquest-linux-x86_64

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-x86_64-build
          path: artifacts/myquest-linux-x86_64
      
      - name: Generate date
        id: date
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Create Nightly Release
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly-${{ steps.date.outputs.date }}
          name: Development Build ${{ steps.date.outputs.date }}
          draft: false
          prerelease: true
          files: artifacts/myquest-linux-x86_64

      - name: Create Tagged Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: artifacts/myquest-linux-x86_64